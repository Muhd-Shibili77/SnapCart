<%- include ("../partial/header" )-%>


<div class="container login_align d-flex justify-content-center align-items-center min-vh-100">
    <div class="login-container">
        <div class="login-form mt-5">
            <h2 class="text-center">Enter New Password</h2>

            <form class="mt-3">
                <div class="form-group">
                    <input type="password" id="password" name="password" class="form-email form-control" placeholder="Password" required>
                </div>
                <div class="form-group">
                    <input type="password" id="confirmPassword" name="confirmPassword" class="form-email form-control" placeholder="Confirm Password" required>
                </div>
                
                <p class="text-danger text-center" style="font-size: medium;">
                    <%= locals.noMatch ? noMatch : null %>
                </p>

                <div class="text-center">
                    <button type="button" onclick="ChangePassword()" class="btn btn-dark px-4 py-2 mt-2" style="font-size: 0.9rem;">Submit</button>
                </div>
            </form>
        </div>
    </div>
</div>



    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>


async function ChangePassword() {
    const password = document.getElementById('password').value.trim();
    const confirmPassword = document.getElementById('confirmPassword').value.trim(); // Corrected 'conformPassword' to 'confirmPassword'
    
    const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

    if (!password) {
        Swal.fire({
            icon: "error",
            title: 'Password is empty',
            text: 'Password field cannot be empty',
            confirmButtonText: 'OK'
        });
        return;
    }

    if(!passwordPattern.test(password)){
        Swal.fire({
            icon: 'error',
            title: 'Use Strong Password',
            text: 'Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one number, and one special character.',
            confirmButtonText: 'OK'
        });
        return;
    }

    if (!confirmPassword) {
        Swal.fire({
            icon: "error",
            title: 'Confirm password is empty',
            text: 'Confirm password field cannot be empty',
            confirmButtonText: 'OK'
        });
        return;
    }

    if (!passwordPattern.test(confirmPassword)) {
        Swal.fire({
            icon: 'error',
            title: 'Use Strong Password',
            text: 'Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one number, and one special character.',
            confirmButtonText: 'OK'
        });
        return;
    }

    if (password !== confirmPassword) {
        Swal.fire({
            icon: "error",
            title: 'Passwords do not match',
            text: 'Please make sure both passwords match',
            confirmButtonText: 'OK'
        });
        return;
    }

    const response = await fetch('/user/passwordChange', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ password, confirmPassword })
    });

    if (response.ok) {
        const result = await response.json();
        if (result.success) {
            Swal.fire({
                icon: "success",
                title: 'Password Changed',
                text: 'Your password has been changed successfully.',
                confirmButtonText: 'OK'
            }).then(() => {
                window.location.href = result.redirectUrl;
            });
        } else {
            Swal.fire({
                icon: "error",
                title: 'Error',
                text: result.message,
                confirmButtonText: 'OK'
            });
        }
    } else {
        Swal.fire({
            icon: "error",
            title: 'Error',
            text: 'An error occurred. Please try again later.',
            confirmButtonText: 'OK'
        });
    }
}


    </script>




    <%- include ("../partial/footer" )-%>