<%- include ("../partial/header" )-%>
    <section class="login_align">
        <div class="signup-container">
            <div class="login-image">
                <img class="img-fluid" src="/images/about-left-image.jpg" alt="Shopping Mall Image">
            </div>
            <div class="login-form">
                <h2>Create an account</h2>
                <p>Enter your details below</p>
                <form>
                    <div class="input-group">

                        <input type="text" class="borderless" id="name" name="name" placeholder="Name" required>

                    </div>
                    <div class="input-group">

                        <input type="email" id="email" class="borderless" name="email" placeholder="Email" required>

                    </div>
                    <div class="input-group">

                        <input type="text" id="phone" class="borderless" name="phone" placeholder="Phone Number" 
                            required>


                    </div>
                    <div class="input-group">
                        <input type="password" id="password" class="borderless" name="password" placeholder="Password" required>
                    </div>
                    <div class="input-group">
                        <input type="text" id="referalCode" class="borderless" name="referalCode" placeholder="Referal code(optional)">
                    </div>

                    <div class="row pt-3">
                        <div class="col-sm-12">
                            <button type="button" onclick="signup()" value="submit"
                                class="btn btn-dark px-4 py-2 fs-6  signup-button" id="createAccount" style="font-size: 0.9rem;">Create
                                Account</button>
                        </div>
                    </div>
                    <div class="d-flex gap-3 flex-column mt-3 mb-2">
                        <a href="/auth/google" class="btn btn-lg btn-outline-dark" style="font-size: 0.9rem;">
                            <!-- Google Sign In Button -->
                            <span class="ms-2 fs-6 fw-bold"> <i class="bi bi-google"></i> Sign in with Google</span>
                        </a>
                        <p class="mb-0 text-center" style="font-size: 0.85rem;">Already have Account? <a
                                href="/user/login" class="fw-bold text-dark text-decoration-none">Login</a></p>
                    </div>


                </form>


            </div>
        </div>
    </section>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>

        async function signup() {

            const name = document.getElementById('name').value.trim()
            const email = document.getElementById('email').value.trim()
            const phone = document.getElementById('phone').value.trim()
            const password = document.getElementById('password').value.trim()
            const referalCode = document.getElementById('referalCode').value
            const submit = document.getElementById('createAccount')

           
            


            if (!name) {
                Swal.fire({
                    icon: 'error',
                    title: 'name is empty',
                    text: 'name field cannot be empty',
                    confirmButtonText: 'OK'
                })
            }

            if (name.length < 2 || name.length > 10) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Name Length',
                    text: 'Name must be between 2 and 10 characters.',
                    showConfirmButton: true
                });
                return;
            }
            const nameRegex = /^[a-zA-Z\s\-]+$/;

            if (!nameRegex.test(name)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Characters in Name',
                    text: 'Name should not contain numbers or special characters like *.',
                    showConfirmButton: true
                });
                return;
            }



            if (!email) {
                Swal.fire({
                    icon: 'error',
                    title: 'email is empty',
                    text: 'email field cannot be empty',
                    confirmButtonText: 'OK'
                })
            }

            if (!phone) {
                Swal.fire({
                    icon: 'error',
                    title: 'phone is empty',
                    text: 'phone field cannot be empty',
                    confirmButtonText: 'OK'
                })
            }


            if (phone.length !== 10) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Phone',
                    text: 'phone should contain 10 digits',
                    showConfirmButton: true
                });
                return;
            }

            if (/^[0]+$/.test(phone)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Phone',
                    text: 'Phone not contain full zeros',
                    showConfirmButton: true
                })
                return
            }

            const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
            if (!password) {
                Swal.fire({
                    icon: 'error',
                    title: 'password is empty',
                    text: 'password field cannot be empty',
                    confirmButtonText: 'OK'
                })
            }

            if (!passwordPattern.test(password)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Use Strong Password',
                    text: 'Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one number, and one special character.',
                    confirmButtonText: 'OK'
                })
                return;
            }


            try {
                const response = await fetch('/user/signup', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ name, email, phone, password, referalCode })
                });

                const result = await response.json(); // Always parse the response as JSON

                // Check the response status
                if (response.ok) {
                   if(result.success){
                    Swal.fire({
                        icon: 'success',
                        title: 'OTP sent',
                        text: 'OTP sented successfully', // Use the success message from the server
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = '/user/otp' // Reload the page after closing the alert
                    });
                   }else{
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message,
                        confirmButtonText: 'OK'
                    });
                   }
                    
                } else {
                    // Show specific SweetAlert based on error message
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message,
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'An unexpected error occurred. Please try again later.',
                    confirmButtonText: 'OK'
                });
            }



        }

    </script>

    <%- include ("../partial/footer" )-%>