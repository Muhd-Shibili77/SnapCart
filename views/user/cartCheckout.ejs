<%- include('../partial/header')-%>
  <header class="header-area header-sticky">
    <div class="container">
      <div class="row">
        <div class="col-12">
          <nav class="main-nav">
            <!-- ***** Logo Start ***** -->
            <a href="#" class="logo">
              <img src="/images/SnapCart.png">
            </a>
            <!-- ***** Logo End ***** -->
            <!-- ***** Menu Start ***** -->
            <ul class="nav">

              <li class="scroll-to-section"><a href="/user/home">Home</a></li>
              <li class="scroll-to-section"><a href="/user/home">Men's</a></li>
              <li class="scroll-to-section"><a href="/user/home">Women's</a></li>
              <li class="scroll-to-section"><a href="/user/home">Kid's</a></li>
              <li class="scroll-to-section"><a href="/user/products">Products</a></li>
              <li class="scroll-to-section"><a href="/cart"><i class="bi bi-cart"></i></a></li>
              <li class="scroll-to-section"><a href="/wishlist"><i class="bi bi-heart"></i></a></li>
              <li class="submenu">
                <a href="javascript:;"><i class="bi bi-person-circle"></i></a>
                <ul>
                  <li><a href="/user/profile">My Account</a></li>
                  <li><a href="/order/order_history">My Orders</a></li>
                  <li><a href="/user/wallet">My Wallet</a></li>
                  <li><a href="/user/about">About Us</a></li>
                  <li><a href="/user/contact">Contact Us</a></li>
                  <li><a href="/user/logout">Logout</a></li>

                </ul>
              </li>

            </ul>
            <a class='menu-trigger'>
              <span>Menu</span>
            </a>

          </nav>
        </div>
      </div>
    </div>
  </header>
  <!-- ***** Header Area End ***** -->
  <div class="billing">

    <!-- ------------------breadcrumbs starts----------------- -->
    <div class="container">
      <ol class="breadcrumb breadcrumb-arrow">
          <li><a href="/user/home">Home</a></li>
          <li><a href="/cart/">
                  cart
              </a>
          </li>
          <li class="active"><span>
           checkout
        </span></li>       
      </ol>
  </div>
<!-- ------------------breadcrumbs ends----------------- -->

    <section class="bg-light py-5">
      <div class="container">
        <div class="row">
          <div class="col-xl-8 col-lg-8 mb-4">
            <div class="billing-details">
              <h4>Billing Details</h4>
              <form id="billing-form" action="/order_confirm" method="POST">
                <div class="form-group">
                  <label>Select a saved address</label>
                  <select id="savedAddresses" name="addressId" class="form-control" required>
                    <option disabled selected value=''>Select a saved address</option>
                    <% if(address && address.length>0){ %>
                      <% address.forEach((element)=>{ %>
                        <option value="<%= element._id %>">
                          <%= element.fullName %> - <%= element.streetAddress %>, <%= element.city %>
                        </option>

                        <% }) %>
                          <% }else{ %>
                            <option value="">No address... Add your address </option>
                            <% } %>


                  </select>
                </div>
            </div>
            </form>

            <!-- Checkout -->



            <div class="card shadow-0 border">
              <div class="p-4">


                <hr class="my-4" />

                <h5 class="card-title mb-3">Add address</h5>


                <form id="addAddressForm">
                  <div class="row">
                    <div class="col-sm-6">
                      <p class="mb-0">Name</p>
                      <div class="form-outline">
                        <input type="text" id="typeText" placeholder="Type here" name="fullName" class="form-control" />
                      </div>
                    </div>
                    <div class="col-sm-6">
                      <p class="mb-0">Phone</p>
                      <div class="form-outline">
                        <input type="number" id="typeText" placeholder="Type here" name="phone" class="form-control" />
                      </div>
                    </div>
                    <div class="col-sm-12 mb-3 mt-3">
                      <p class="mb-0">Street Address</p>
                      <div class="form-outline">
                        <input type="text" id="typeText" placeholder="Type here" name="address" class="form-control" />
                      </div>
                    </div>



                    <div class="col-sm-3 mb-3">
                      <p class="mb-0">pincode</p>
                      <div class="form-outline">
                        <input type="number" id="typeText" name="pincode" class="form-control" />
                      </div>
                    </div>

                    <div class="col-sm-3 col-6 mb-3">
                      <p class="mb-0">city</p>
                      <div class="form-outline">
                        <input type="text" id="typeText" name="city" class="form-control" />
                      </div>
                    </div>

                    <div class="col-sm-3 col-6 mb-3">
                      <p class="mb-0">state</p>
                      <div class="form-outline">
                        <input type="text" id="typeText" name="state" class="form-control" />
                      </div>
                    </div>
                    <div class="col-sm-3 col-6 mb-3">
                      <p class="mb-0">country</p>
                      <div class="form-outline">
                        <input type="text" id="typeText" name="country" class="form-control" />
                      </div>
                    </div>
                  </div>





                  <div class="float-end">

                    <a onclick="addAddress()" class="btn btn-outline-dark shadow-0 border">Add</a>
                  </div>
              </div>
            </div>
            </form>
            <!-- Checkout -->
          </div>
          <div class="col-xl-4 col-lg-4 d-flex justify-content-center justify-content-lg-end">
            <div class="ms-lg-4 mt-4 mt-lg-0" style="max-width: 320px;">
              <h6 class="mb-3">Summary</h6>

              <div class="d-flex justify-content-between">
                <p class="mb-2">Total price:</p>
                <p class="mb-2">₹<%=cart.total_price %>
                </p>
              </div>
              <div class="d-flex justify-content-between">
                <p class="mb-2">Discount:</p>
                <p class="mb-2 text-danger"> -₹00.00</p>
              </div>
              <div class="d-flex justify-content-between">
                <p class="mb-2">Shipping cost:</p>
                <p class="mb-2">Free </p>
              </div>
              <hr />
              <div class="d-flex justify-content-between">
                <p class="mb-2">Total price:</p>
                <p class="mb-2 fw-bold">₹<%=cart.total_price-100 %></p>
              </div>
              <input type="hidden" name="cartegoryId" id="cartegoryId" value="<%= cart._id %>">
              <div class="payment-methods">
                <h6 class="mt-3">Payment Method</h6>
                <div class="form-check mt-3">
                  <input type="radio" id="bank" name="paymentMethod" value="bank" class="form-check-input">
                  <label for="bank" class="form-check-label">Bank Transfer <i class="bi bi-credit-card"></i></label>
                </div>
                <div class="form-check mt-2">
                  <input type="radio" id="cod" name="paymentMethod" value="cod" class="form-check-input" checked>
                  <label for="cod" class="form-check-label">Cash on Delivery <i class="bi bi-cash"></i></label>
                </div>
              </div>
              <div class="input-group mt-5 mb-4">
                <input type="text" class="form-control border" name="" placeholder="Coupon code" />
                <button class="btn btn-light text-primary border">Apply</button>
              </div>
              <div class="float-end">
                <a href="/cart" class="btn btn-light border">Cancel</a>
                <button class="btn btn-success shadow-0 border" onclick="placeOrder()">Place Order</button>
              </div>

              <hr />
              <h6 class="text-dark my-4">Items in cart</h6>

              <% if (cart && cart.items.length> 0) { %>

                <% cart.items.forEach((element)=>{ %>

                  <div class="d-flex align-items-center mb-4">
                    <% const variant=element.product.variants.find(v=>v._id.toString() === element.variantId ) %>
                      <div class="me-3 position-relative">
                        <span
                          class="position-absolute top-0 start-100 translate-middle badge rounded-pill badge-secondary">
                          <%= element.quantity %>
                        </span>
                        <img src="/<%= variant.images[0] %>" style="height: 96px; width: 96x;"
                          class="img-sm rounded border" />
                      </div>
                      <div class="">
                        <a href="#" class="nav-link">
                          <%= element.product.product_name %> <br />
                            <%= variant.color %> color
                        </a>
                        <div class="price text-muted">Total: <%= variant.price*element.quantity %>
                        </div>
                      </div>
                  </div>

                  <% }) %>
                    <% }else{ %>
                      <h6 class="text-danger my-4">No items in cart </h6>

                      <% } %>





            </div>
          </div>
        </div>
      </div>
    </section>
  </div>









  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    async function addAddress() {

      const form = document.getElementById('addAddressForm');
      if (!form) {
        console.error('Form not found!');
        return;
      }
      const fullName = form.fullName.value.trim();
      const address = form.address.value.trim();
      const pincode = form.pincode.value.trim();
      const phone = form.phone.value.trim();
      const city = form.city.value.trim(); 
      const state = form.state.value.trim();
      const country = form.country.value.trim();
      
      if (!fullName) {
        Swal.fire({
          icon: 'error',
          title: 'Name is empty',
          text: 'Name field cannot be empty',
          confirmButtonText: 'OK'
        })
        return;
      }

      if (fullName.length < 2 || fullName.length > 10) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Name Length',
          text: 'Name must be between 2 and 10 characters.',
          showConfirmButton: true
        });
        return;
      }

      const nameRegex = /^[a-zA-Z\s\-]+$/;

      if (!nameRegex.test(fullName)) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Characters in Name',
          text: 'Name should not contain numbers or special characters like *.',
          showConfirmButton: true
        });
        return;
      }


      if (!address) {
        Swal.fire({
          icon: 'error',
          title: 'address is empty',
          text: 'address field cannot be empty',
          confirmButtonText: 'OK'
        })
        return;
      }


      if (!/^[a-zA-Z0-9\s,\-]+$/.test(address)) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Characters in address',
          text: 'address should not contain numbers or special characters like *.',
          showConfirmButton: true
        });
        return;
      }


      if (!pincode) {
        Swal.fire({
          icon: 'error',
          title: 'pincode is empty',
          text: 'pincode field cannot be empty',
          confirmButtonText: 'OK'
        })
        return;
      }

      if (pincode.length !== 6) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid pincode',
          text: 'pincode should contain 6 digits',
          showConfirmButton: true
        });
        return;
      }

      if (/^[0]+$/.test(pincode)) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid pincode',
          text: 'pincode not contain full zeros',
          showConfirmButton: true
        })
        return
      }


      if (!phone) {
        Swal.fire({
          icon: 'error',
          title: 'phone is empty',
          text: 'phone field cannot be empty',
          confirmButtonText: 'OK'
        })
        return;
      }

      if (phone.length !== 10) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Phone',
          text: 'phone should contain 10 digits',
          showConfirmButton: true
        });
        return;
      }

      if (/^[0]+$/.test(phone)) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Phone',
          text: 'Phone not contain full zeros',
          showConfirmButton: true
        })
        return
      }



      if (!city) {
        Swal.fire({
          icon: 'error',
          title: 'city is empty',
          text: 'city field cannot be empty',
          confirmButtonText: 'OK'
        })
        return;
      }

      if (!nameRegex.test(city)) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Characters in city',
          text: 'city should not contain numbers or special characters like *.',
          showConfirmButton: true
        });
        return;
      }

      if (!state) {
        Swal.fire({
          icon: 'error',
          title: 'state is empty',
          text: 'state field cannot be empty',
          confirmButtonText: 'OK'
        })
        return;
      }

      if (!nameRegex.test(state)) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Characters in state',
          text: 'state should not contain numbers or special characters like *.',
          showConfirmButton: true
        });
        return;
      }

      if (!country) {
        Swal.fire({
          icon: 'error',
          title: 'country is empty',
          text: 'country field cannot be empty',
          confirmButtonText: 'OK'
        })
        return;
      }
      if (!nameRegex.test(country)) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Characters in country',
          text: 'country should not contain numbers or special characters like *.',
          showConfirmButton: true
        });
        return;
      }


      const responce = await fetch('/user/add_address', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ fullName, address, pincode, phone, city, state, country })
      })



      if (responce.ok) {
        Swal.fire({
          icon: 'success',
          title: 'address added',
          text: 'The address has been successfully added.',
          confirmButtonText: 'OK'
        }).then(() => {
          location.reload(); // Reload the page after confirmation
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Failed to Add ',
          text: 'Unable to add the address. Please try again later.',
          confirmButtonText: 'OK'
        });
      }

    }


    async function placeOrder() {
      try {

        const addressId = document.getElementById('savedAddresses').value
        const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value
        const cartId = document.getElementById('cartegoryId').value

        if (!addressId || addressId === '') {
          Swal.fire({
            icon: 'warning',
            title: 'No Address Selected',
            text: 'Please select or add a shipping address.',
            confirmButtonText: 'OK'
          });
          return;
        }
        if (!paymentMethod) {
          Swal.fire({
            icon: 'warning',
            title: 'No payment Selected',
            text: 'Please select payment method.',
            confirmButtonText: 'OK'
          });
          return;
        }

        const responce = await fetch('/order/confrom_order', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ addressId, paymentMethod, cartId })
        })
        if (responce.ok) {
          Swal.fire({
            icon: 'success',
            title: 'order placed',
            text: 'The order is successfully placed.',
            confirmButtonText: 'OK'
          }).then(() => {
            window.location.href = '/order/order_history'; //redirect to order history page
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Failed to order',
            text: 'Unable to place order. Please try again later.',
            confirmButtonText: 'OK'
          })
        }
      } catch (error) {
        console.error('Error while placing order :', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An error occurred while placing the order.',
          confirmButtonText: 'OK'
        });
      }




    }
  </script>


  <%- include('../partial/footer')-%>