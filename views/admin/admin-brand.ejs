<%- include ('../partial/admin-header')-%>
  <style>
    body {
      overflow-x: hidden;
    }

    .side-area {
      height: 100%;
      background-color: transparent;
    }

    .main-area {
      height: 100vh;
      margin-top: 10vh;
      background-color: transparent;
    }

    .admin-dashboard .dashboard {
      color: #505050 !important;
    }

    .side1 {
      width: 300px !important;
      height: 700px !important;
      background-color: rgba(170, 170, 170, 0.52);
      border-radius: 12px;
      margin-top: 0vh;
      position: fixed;
      margin-left: 40px;
    }

    .admin-name {
      margin-left: 135vh;
    }

    .search {
      width: 110vh;
      margin-left: 15vh;
      border-radius: 10px;
    }

    .brands-1 {
      color: #000000 !important;
    }

    .dashboard {
      color: #505050 !important;
    }

    .dashboard:hover {
      color: #000000 !important;
    }

    .add-category {
      margin-top: 40px;

      gap: 10px;
      width: 70vh;
      height: 20vh;
      background-color: #b8b6b600;


    }
  </style>
  <section>
    <div class="row">
      <div class="col-md-3">
        <div class="container side-area">
          <div class="container-fluid side1">
            <div class="side-bar">
              <div class="container-7">
                <div>
                  <img style="margin: 50px;" src="/images/SnapCart.png" alt="">
                </div>
                <div class="dashboard-1">
                  <div class="dashboard-11"></div>
                  <a href="/admin/dashboard" class="dashboard btn"><img style="width: 35px; margin-right: 15px;"
                      src="/images/icons/dashboard.png" alt="">Dashboard </a>
                </div>

                <div class="users">
                  <div class="user"></div>
                  <a href="/admin/users" class="users-1 btn"><img style="width: 35px; margin-right: 15px;"
                      src="/images/icons/user.png" alt=""> Users </a>
                </div>
                <div class="products">
                  <div class="order"></div>
                  <a href="/admin/products" class="products-1 btn "><img style="width: 35px; margin-right: 15px;"
                      src="/images/icons/order.png" alt=""> Products </a>
                </div>
                <div class="offers">
                  <div class="order"></div>
                  <a href="#" class="offers-1 btn "><img style="width: 35px; margin-right: 15px;"
                      src="/images/icons/discount.png" alt=""> Offers </a>
                </div>
                <div class="orders">
                  <div class="shopping-cart"></div>
                  <a href="/admin/orders" class="orders-1 btn"><img style="width: 35px; margin-right: 15px;"
                      src="/images/icons/shopping-cart.png" alt="">Orders </a>
                </div>
                <div class="categories">
                  <div class="categories-2"></div>
                  <a href="/admin/category" class="categories-1 btn"><img style="width: 35px; margin-right: 15px;"
                      src="/images/icons/categories.png" alt=""> Categories </a>
                </div>
                <div class="brands">
                  <div class="brand-1"></div>
                  <a href="#" class="brands-1 btn"><img style="width: 35px; margin-right: 15px;"
                      src="/images/icons/brand-hover.png" alt=""> Brands </a>
                </div>
                <div class="coupon">
                  <div class="coupon-1"></div>
                  <a href="#" class="coupon-1 btn"><img style="width: 35px; margin-right: 15px;"
                      src="/images/icons/coupon (1).png" alt="">Coupon</a>
                </div>
                <div class="payment">
                  <div class="income-1"></div>
                  <a href="#" class="payment-1 btn"><img style="width: 35px; margin-right: 15px;"
                      src="/images/icons/income (1).png" alt=""> Payment </a>
                </div>
                <div class="payment-2">
                  <div class="logout-1"></div>
                  <a href="/admin/logout" class="logout btn"><img style="width: 35px; margin-right: 15px;"
                      src="/images/icons/logout.png" alt=""> Logout </a>
                </div>
              </div>
              <div class="icon">
                <div class="snap-cart-3"></div>
                <div class="line-21"></div>
              </div>
            </div>
          </div>

        </div>
      </div>
      <div class="col-md-9">
        <div class="container-fluid main-area">
          <div class="group-1000005981 admin-name">
            <div class="shibili d-flex">
              <img style="width: 30px; margin-right: 15px; margin-bottom: 15px;" src="/images/icons/user (2).png"
                alt="">ADMIN
            </div>
          </div>
          <div class="">
            <form class="  " style="width:350px;">
              <input class="form-control search" type="search" placeholder="Search..." aria-label="Search">
            </form>
          </div>
          <table class="table table-striped table-hover mt-5">
            <thead>
              <tr>
                <th scope="col">Brand_id</th>
                <th scope="col">Brand_name</th>
                <th scope="col">Action</th>
              </tr>
            </thead>
            <tbody>
              <% if(typeof brand !='undefined' && brand.length> 0 ) { %>
                <% brand.forEach((brand,index)=> { %>
                  <tr>
                    <th scope="row">
                      <%= (currentPage-1) * 6 + index+1 %>
                    </th>
                    <td>
                      <%= brand.brand_name %>
                    </td>
                    <td>
                      <% if (brand.isDeleted) { %>
                        <button type="button" class="btn btn-outline-success restore-button"
                          data-brand-id="<%= brand._id %>">RESTORE</button>

                        <% } else { %>
                          <button type="button" class="btn btn-outline-danger delete-button"
                            data-brand-id="<%= brand._id %>">DELETE</button>
                          <button type="button" class="btn btn-outline-secondary edit-button" data-toggle="modal"
                            data-target="#exampleModal" data-brand-id="<%= brand._id %>"
                            data-brand-name="<%= brand.brand_name %>">
                            EDIT
                          </button>
                          <% } %>
                    </td>
                  </tr>
                  <% }) %>
                    <% } else { %>
                      <tr>
                        <td colspan="6" class="text-center">No brand available</td>
                      </tr>
                      <% } %>
            </tbody>
          </table>

          <form>

            <div class="add-category">
              <input type="text" name="brandName" id="brandName" class="form-control" placeholder="Brand Name" required>
              <p class="text-danger">

              </p>
              <button onclick="addBrand()" class="btn btn-outline-dark" type="button" style="width: 30vh; margin-top: 2vh;">
                <i class="bi bi-plus-square"></i> Add Brand
              </button>
            </div>
          </form>

          <!-- ------------pagination-------------- -->



          <div class="container mt-2"
            style="background-color: transparent !important; display: flex; justify-content: center;">
            <nav aria-label="...">
              <ul class="pagination pagination-lg justify-content-center bg-dark-subtle">

                <% if (currentPage !==1 && currentPage==totalPage) { %>
                  <li class="page-item">
                    <a class="page-link" href="/admin/brand?page=<%= currentPage -1 %>">
                      <</a>
                  </li>
                  <% } %>


                    <% for(let i=1;i<=totalPage;i++){ %>

                      <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                        <a class="page-link" href="/admin/brand?page=<%= i %>">
                          <%= i %>
                        </a>
                      </li>

                      <% } %>

                        <% if (currentPage !==totalPage) { %>
                          <li class="page-item">
                            <a class="page-link" href="/admin/brand?page=<%= currentPage + 1 %>">></a>
                          </li>
                          <% } %>

              </ul>
            </nav>
          </div>

        </div>
      </div>

      <!-- Edit Category Modal -->
      <!-- Modal -->
      <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Edit Brand</h5>

              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <form id="editBrandForm">
                <p>Brand_name</p>

                <input type="text" class="form-control" id="brandName" name="brandName" required>

                <input type="hidden" id="brandId" name="brandId">
              </form>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" onclick="submitEditBrand()">Save changes</button>
            </div>
          </div>
        </div>
      </div>









  </section>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>

    document.addEventListener("DOMContentLoaded", () => {
      const deletebuttons = document.querySelectorAll(".delete-button")
      const restorebuttons = document.querySelectorAll(".restore-button")
      const editbuttons = document.querySelectorAll(".edit-button")

      //blocking user

      deletebuttons.forEach(button => {
        button.addEventListener('click', async () => {
          const brandId = button.getAttribute("data-brand-id")
          if (!brandId) {
            Swal.fire({
              icon: 'error',
              title: 'brand not found',
              confirmButtonText: 'OK'
            });
            return
          }

          const result = await Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to Delete this brand?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, Delete!',
            cancelButtonText: 'Close!'
          });

          if (result.isConfirmed) {
            try {
              const responce = await fetch('/admin/delete_brand', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ brandId })
              });

              if (responce.ok) {
                Swal.fire({
                  icon: 'success',
                  title: 'Brand Deleted',
                  text: 'The Brand has been successfully deleted.',
                  confirmButtonText: 'OK'
                }).then(() => {
                  location.reload();
                });
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Failed to Delete',
                  text: 'Unable to delete the Brand. Please try again later.',
                  confirmButtonText: 'OK'
                });
              }
            } catch (err) {
              console.error('Error while deleting brand:', error);
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while deleting the Brand.',
                confirmButtonText: 'OK'
              });
            }
          }

        })
      })

      //unblocking user

      restorebuttons.forEach(button => {
        button.addEventListener('click', async () => {
          const brandId = button.getAttribute("data-brand-id")
          if (!brandId) {
            Swal.fire({
              icon: 'error',
              title: 'Brand not found',
              confirmButtonText: 'OK'
            });
            return
          }
          const result = await Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to restore this Brand?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes,Restore!',
            cancelButtonText: 'Close!'
          });

          if (result.isConfirmed) {
            try {
              const response = await fetch('/admin/restore_brand', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ brandId })
              });

              if (response.ok) {
                Swal.fire({
                  icon: 'success',
                  title: 'Brand Restored',
                  text: 'The brand has been successfully restored.',
                  confirmButtonText: 'OK'
                }).then(() => {
                  location.reload(); // Reload the page
                })
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Failed to Restore',
                  text: 'Unable to Restore the brand. Please try again later.',
                  confirmButtonText: 'OK'
                });
              }
            } catch (error) {
              console.error('Error while restoring brand:', error);
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while restoring the brand.',
                confirmButtonText: 'OK'
              });
            }
          }

        });
      });

      //edit category

      editbuttons.forEach(button => {
        button.addEventListener('click', async () => {

          const brandId = button.getAttribute("data-brand-id")
          const brandName = button.getAttribute("data-brand-name")

          //put into fields in modals
          document.getElementById('brandId').value = brandId;
          document.getElementById('brandName').value = brandName;
        })
      });


    })
    async function submitEditBrand() {

      const existerror = document.getElementById('existerror')
      const form = document.getElementById('editBrandForm');


      const brandName = form.brandName.value;
      const brandId = form.brandId.value;

      if (!brandName) {
        Swal.fire({
          icon: "error",
          title: 'brand Name is empty',
          text: 'Brand name field cannot be empty',
          confirmButtonText: 'OK'
        })
        return
      }

      const result = await Swal.fire({
        title: 'Are you sure?',
        text: "Do you want to edit this brand?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes,Make changes!',
        cancelButtonText: 'Close!'
      });

      if (result.isConfirmed) {
        const responce = await fetch('/admin/edit_brand', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ brandId, brandName })
        })

        if (responce.status === 400) {
          const data = await responce.json()
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.error,
            confirmButtonText: 'OK'
          });
        } else if (responce.ok) {
          Swal.fire({
            icon: 'success',
            title: 'brand Updated',
            text: 'The brand has been successfully updated.',
            confirmButtonText: 'OK'
          }).then(() => {
            location.reload();
          })
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Error while updating Brand',
            confirmButtonText: 'OK'
          });
        }
      }


    }

    async function addBrand() {
      const brandName = document.getElementById('brandName').value.trim()

      if (!brandName) {
        Swal.fire({
          icon: 'error',
          title: 'brand name is empty',
          text: 'brand field is not be empty',
          confirmButtonText: 'OK'
        })
        return
      }
      try {
        const response = await fetch('/admin/add_brand', {
          method: "POST",
          headers: {
            'Content-Type': 'application/json',

          },
          body: JSON.stringify({ brandName })
        })
        
        if (response.ok) {
          const result = await response.json()
          if (result.success) {
            Swal.fire({
              icon: "success",
              title: 'brand added successfully',
              text: result.message,
              confirmButtonText: 'OK'
            }).then(()=>{
              window.location.reload()
            })
          } else {
            Swal.fire({
              icon: "error",
              title: 'adding Failed',
              text: result.error,
              confirmButtonText: 'OK'
            });
          }
        } else {
          Swal.fire({
            icon: "error",
            title: 'Error',
            text: 'An error occurred. Please try again later.',
            confirmButtonText: 'OK'
          });
        }
      } catch (error) {
        Swal.fire({
          icon: "error",
          title: 'Network Error',
          text: 'An error occurred. Please check your network connection.',
          confirmButtonText: 'OK'
        });
      }

    }



  </script>

  <%- include ('../partial/admin-footer')-%>